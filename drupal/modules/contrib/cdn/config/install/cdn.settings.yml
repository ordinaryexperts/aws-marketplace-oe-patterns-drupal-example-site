langcode: en
status: false
mapping:
  type: simple
  domain: null
  conditions:
    not:
      extensions: [css, js]

# Serve all files from a single CDN:
#
# mapping:
#   type: simple
#   domain: cdn-a.com
#   conditions: []

# Serve all files from a single CDN except CSS and JS:
#
# mapping:
#   type: simple
#   domain: cdn-a.com
#   conditions:
#     not:
#       extensions: [css, js]

# Serve only image files from a single CDN:
#
# mapping:
#   type: simple
#   domain: cdn-a.com
#   conditions:
#     extensions: [jpg, jpeg, png]

# Serve CSS & image files from CDN A, downloads from B, everything else from C:
#
# mapping:
#   type: complex
#   fallback_domain: cdn-c.com
#   domains:
#     -
#       type: simple
#       domain: cdn-a.com
#       conditions:
#         extensions: [css, jpg, jpeg, png]
#     -
#       type: simple
#       domain: cdn-b.com
#       conditions:
#         extensions: [zip]

# Serve CSS & JS files from CDN A, images from either B or C and nothing else:
#
# mapping:
#   type: complex
#   fallback_domain: null
#   domains:
#     -
#       type: simple
#       domain: cdn-a.com
#       conditions:
#         extensions: [css, js]
#     -
#       type: auto-balanced
#       domains:
#         - cdn-b.com
#         - cdn-c.com
#       conditions:
#         extensions: [jpg, jpeg, png]

# Scheme-relative CDN URLs are generated by default (`//`), but it is possible to generate absolute URLs by setting it
# it to `https://` or `http://`.
scheme: //
farfuture:
  status: true
# Public is enabled by default, additional local stream wrappers can be added.
stream_wrappers:
  - public
